<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Hype-Driven Development</title>
    <link>https://kenan-rhoton.github.io/post/</link>
    <description>Recent content in Posts on Hype-Driven Development</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 10 Feb 2020 18:30:23 +0200</lastBuildDate>
    
	<atom:link href="https://kenan-rhoton.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Let&#39;s talk about Code Reviews</title>
      <link>https://kenan-rhoton.github.io/post/talk/code-review/</link>
      <pubDate>Mon, 10 Feb 2020 18:30:23 +0200</pubDate>
      
      <guid>https://kenan-rhoton.github.io/post/talk/code-review/</guid>
      <description>Also known as &amp;ldquo;just hit accept, I checked it already!&amp;quot;.
The Code Review is a practice that dates back to ancient times when someone would finish writing some code (in this case the Hammurabi Code) and someone else would check to make sure they hadn&amp;rsquo;t made any stupid mistakes. So I guess you&amp;rsquo;ll understand me when I find it surprising we still do it wrong.
What do I mean by wrong?</description>
    </item>
    
    <item>
      <title>Let&#39;s talk about TDD</title>
      <link>https://kenan-rhoton.github.io/post/talk/tdd/</link>
      <pubDate>Sun, 16 Sep 2018 15:50:28 +0200</pubDate>
      
      <guid>https://kenan-rhoton.github.io/post/talk/tdd/</guid>
      <description>Red Green Refactor Repeat  Test Driven Development, also known as &amp;ldquo;this would be so cool if green started with an R&amp;rdquo;.
So this new (as in 1957) way of programming has been catching on lately, and I&amp;rsquo;ve had to clarify many points about what TDD is and isn&amp;rsquo;t. I want to talk about some things related to my vision of TDD (which might not be yours, and that&amp;rsquo;s ok).</description>
    </item>
    
    <item>
      <title>When Should I Use Python?</title>
      <link>https://kenan-rhoton.github.io/post/wsiu/python/</link>
      <pubDate>Sat, 27 May 2017 18:18:05 +0200</pubDate>
      
      <guid>https://kenan-rhoton.github.io/post/wsiu/python/</guid>
      <description>DISCLAIMER: I don&amp;rsquo;t claim to be an expert on this language, so I may have made mistakes. If there is anything you would say differently or anything that is just plain wrong, please open an issue on Github
Python is a beautiful language.
Every language does have some kind of beauty to it (except for perhaps JavaScript), but Python really drives home the message that simplicity can be powerful.
It&amp;rsquo;s also incredibly deep, and it is probably the oldest designed language from the tribe of &amp;ldquo;We can make programming a creative experience.</description>
    </item>
    
    <item>
      <title>When Should I Use Rust?</title>
      <link>https://kenan-rhoton.github.io/post/wsiu/rust/</link>
      <pubDate>Sat, 20 May 2017 10:18:05 +0200</pubDate>
      
      <guid>https://kenan-rhoton.github.io/post/wsiu/rust/</guid>
      <description>DISCLAIMER: I don&amp;rsquo;t claim to be an expert on this language, so I may have made mistakes. If there is anything you would say differently or anything that is just plain wrong, please open an issue on Github
Rust is an amazing language.
True, I say every language is amazing (although begrudgingly with JavaScript), so that may not mean much, but Rust is something special.
It&amp;rsquo;s a language I could imagine replacing C.</description>
    </item>
    
    <item>
      <title>When Should I Use Go?</title>
      <link>https://kenan-rhoton.github.io/post/wsiu/go/</link>
      <pubDate>Fri, 19 May 2017 16:41:02 +0200</pubDate>
      
      <guid>https://kenan-rhoton.github.io/post/wsiu/go/</guid>
      <description>DISCLAIMER: I don&amp;rsquo;t claim to be an expert on this language, so I may have made mistakes. If there is anything you would say differently or anything that is just plain wrong, please open an issue on Github
Go is a language that many people (yet not enough) are talking about.
Yes, it has the interesting origin of basically being designed by Google to solve Google&amp;rsquo;s problems. Yes, it looks at first glance like C with some random syntax changes.</description>
    </item>
    
  </channel>
</rss>