<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>When Should I Use on One True Way</title>
    <link>https://kenan-rhoton.github.io/tags/when-should-i-use/</link>
    <description>Recent content in When Should I Use on One True Way</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Released under the MIT license.</copyright>
    <lastBuildDate>Sat, 27 May 2017 18:18:05 +0200</lastBuildDate>
    
	<atom:link href="https://kenan-rhoton.github.io/tags/when-should-i-use/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>When Should I Use Python?</title>
      <link>https://kenan-rhoton.github.io/post/wsiu/python/</link>
      <pubDate>Sat, 27 May 2017 18:18:05 +0200</pubDate>
      
      <guid>https://kenan-rhoton.github.io/post/wsiu/python/</guid>
      <description>Python is a beautiful language.
Every language does have some kind of beauty to it (except for perhaps JavaScript), but Python really drives home the message that simplicity can be powerful.
It&amp;rsquo;s also incredibly deep, and it is probably the oldest designed language from the tribe of &amp;ldquo;We can make programming a creative experience.&amp;rdquo;
Python is also a very flexible language, which uses dynamic typing to a great effect and allows you to mix programming paradigms in a natural way.</description>
    </item>
    
    <item>
      <title>When Should I Use Rust?</title>
      <link>https://kenan-rhoton.github.io/post/wsiu/rust/</link>
      <pubDate>Sat, 20 May 2017 10:18:05 +0200</pubDate>
      
      <guid>https://kenan-rhoton.github.io/post/wsiu/rust/</guid>
      <description>Rust is an amazing language.
True, I say every language is amazing (although begrudgingly with JavaScript), so that may not mean much, but Rust is something special.
It&amp;rsquo;s a language I could imagine replacing C.
And I don&amp;rsquo;t say that lightly, I&amp;rsquo;m Mr. CFanBoy. C has been in my Top 5 Languages a Developer Needs to Know list longer than any other, and the unofficial number 1 in my heart.</description>
    </item>
    
    <item>
      <title>When Should I Use Go?</title>
      <link>https://kenan-rhoton.github.io/post/wsiu/go/</link>
      <pubDate>Fri, 19 May 2017 16:41:02 +0200</pubDate>
      
      <guid>https://kenan-rhoton.github.io/post/wsiu/go/</guid>
      <description>Go is a language that many people (yet not enough) are talking about.
Yes, it has the interesting origin of basically being designed by Google to solve Google&amp;rsquo;s problems. Yes, it looks at first glance like C with some random syntax changes. And yes, why do you need to learn a new language to do the things you already know how to do?
But every language has its place, and today we&amp;rsquo;re going to look at this beautiful construct (all languages are beautiful, really, except JavaScript) and try to find the answer to the question of When to Use Go.</description>
    </item>
    
  </channel>
</rss>